def label = "mypod-${UUID.randomUUID().toString()}"
def dockerRegistry = "100.71.71.71:5000"
def Creds = "git_cred"

properties([
    parameters([
        stringParam(
            defaultValue: "***", 
            description: '', 
            name: 'imageTagGET_'),
	stringParam(
            defaultValue: "***", 
            description: '', 
            name: 'imageTagUI_'),
	stringParam(
            defaultValue: "***", 
            description: '', 
            name: 'imageTagDB_'),
        stringParam(
            defaultValue: '***', 
            description: '', 
            name: 'e2e_YAML')
    ])
])

podTemplate(label: label, containers: [
  containerTemplate(name: 'python-alpine', image: 'ghostgoose33/python-alp:v1', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.8', command: 'cat', ttyEnabled: true)
],
volumes: [
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
], serviceAccount: "jenkins") 
{


node(label)
{
    try{
        stage("Pre-Test"){
            
        
        }
        stage("E2E-Test-pre"){
            container('python-alpine'){
            def map = [:]
            map = [
                'get':[tag: "${params.imageTagGET_}", path: "${pathTocodeget}"], 'post':[tag: "${imageTagPOST}", path: "${pathTocodepost}"], 
                'db':[tag: "${imageTagDB}", path: "${pathTocodedb}"], 'ui':[tag: "${imageTagUI}", path: "${pathTocodeui}"]
                ]
            if(params.imageTagGET != "***"){
		map['get']['tag'] = "${params.imageTagGET}"
	    }
	    if(params.imageTagUI != "***"){
		map['ui']['tag'] = "${params.imageTagUI}"
	    }
            if(params.imageTagDB != "***"){
		map['db']['tag'] = "${params.imageTagDB}"
	    }
            if(params.imageTagPOST != "***"){
		map['post']['tag'] = "${params.imageTagPOST}"
	    }
	    echo "${map}"
            map.each{ k, v -> sh "python3 ${v['path']}/sed_python.py ${pathTocodeget}/E2E.yaml ${dockerRegistry}/${k}-service ${v['tag']}" }
            sh "python3 ${pathTocodedb}/sed_python.py ${pathTocodeget}/E2E.yaml ${dockerRegistry}/init-container ${map['db']['tag']}"
            }
             
        }
        stage("E2E Test - Stage 1"){
            container('kubectl'){
                sh "kubectl apply -f ${pathTocodeget}/E2E.yaml"
                sh "kubectl get pods --namespace=testing"
            }
        }
        sleep 20
        stage ("E2E Tests - Stage 2"){
            container('python-alpine'){
                sh 'echo "Here is e2e test"'
	        sh "python3 ${pathTocodeget}/e2e-test-test.py"
          }
        }

	stage ("Deploy"){
            
		build(job: 'test_deploy', parameters: [[$class: 'StringParameterValue', name:"imageTagGET", value: "${params.imageTagGET}"],
		[$class: 'StringParameterValue', name:"imageTagUI", value: "${params.imageTagUI}"],
		[$class: 'StringParameterValue', name:"imageTagDB", value: "${params.imageTagDB}"],
		[$class: 'StringParameterValue', name:"imageTagPOST", value: "${params.imageTagPOST}"]], wait: true)
        }
        
    }
    catch(err){
        currentBuild.result = 'Failure'
    }
}
}
