def label = "mypod-${UUID.randomUUID().toString()}"
def dockerRegistry = "100.71.71.71:5000"
def Creds = "git_cred"
podTemplate(label: label, containers: [
  containerTemplate(name: 'python-alpine', image: 'ghostgoose33/python-alp:v1', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'docker', image: 'ghostgoose33/docker-in:v1', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.8', command: 'cat', ttyEnabled: true)
],
volumes: [
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
], serviceAccount: "jenkins") 
{

properties([
    parameters([
        stringParam(
            defaultValue: 'v3.0', 
            description: '', 
            name: 'imageTag'),
        stringParam(
            defaultValue: '***', 
            description: '', 
            name: 'namespace')
    ])
])

node(label)
{
    try{
        
        stage("E2E-Test-pre"){
            container('python-alpine'){
            sh "ls /home/jenkins/workspace/"
            def map = [:]
            map = [
                'get':[tag: "${params.imageTag}", path: "${pathTocodeget}"], 'post':[tag: "${params.imageTag}", path: "${pathTocodepost}"], 
                'db':[tag: "${params.imageTag}", path: "${pathTocodedb}"], 'ui':[tag: "${params.imageTag}", path: "${pathTocodeui}"]
                ]
            map.each{ k, v -> sh "python3 ${v['path']}/sed_python.py ${pathTocodeget}/E2E.yaml ${dockerRegistry}/${k}-service ${v['tag']}" }
            sh "python3 ${pathTocodedb}/sed_python.py ${pathTocodeget}/E2E.yaml ${dockerRegistry}/init-container ${params.imageTag}"
            }
             
        }
        stage("E2E Test - Stage 1"){
            container('kubectl'){
                sh "kubectl apply -f ${pathTocodeget}/E2E.yaml"
                sh "kubectl get pods --namespace=testing"
            }
        }
        sleep 20
        stage ("E2E Tests - Stage 2"){
            container('python-alpine'){
                sh 'echo "Here is e2e test"'
	            sh "python3 ${pathTocodeget}/e2e-test-test.py"
          }
        }
	stage("Deploy"){
            
            build (job: "test_deploy", parameters: [[$class: 'StringParameterValue', name: "imageTag", 
        	                        value: "${params.imageTag}"]], wait: true)
        }


        
    }
    catch(err){
        currentBuild.result = 'Failure'
    }
}
}
